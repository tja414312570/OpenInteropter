import { Client } from "@modelcontextprotocol/sdk/client/index.js";
import { InMemoryTransport } from "@modelcontextprotocol/sdk/inMemory.js";
import { McpServer } from "@modelcontextprotocol/sdk/server/mcp.js";
import { MCPClient } from "./mcp-type";
import { RequestOptions } from "@modelcontextprotocol/sdk/shared/protocol";
import { ClientCapabilities, ServerCapabilities, Implementation, CompleteRequest, LoggingLevel, GetPromptRequest, ListPromptsRequest, ListResourcesRequest, ListResourceTemplatesRequest, ReadResourceRequest, SubscribeRequest, UnsubscribeRequest, CallToolRequest, CallToolResultSchema, CompatibilityCallToolResultSchema, ListToolsRequest } from "@modelcontextprotocol/sdk/types";
import { ServerOptions } from "@modelcontextprotocol/sdk/server/index.js";
export class MemoryMcp implements MCPClient {
    private clientTransport: InMemoryTransport;
    private serverTransport: InMemoryTransport;
    private server: McpServer;
    private client: Client;
    constructor(serverInfo: Implementation, options?: ServerOptions) {
        [this.clientTransport, this.serverTransport] = InMemoryTransport.createLinkedPair();
        this.server = new McpServer(serverInfo, options);
        this.client = new Client(serverInfo, options);
    }
    registerCapabilities(capabilities: ClientCapabilities): void {
        this.client.registerCapabilities(capabilities);
    }
    getServerCapabilities(): ServerCapabilities | undefined {
        return this.client.getServerCapabilities();
    }
    getServerVersion(): Implementation | undefined {
        return this.client.getServerVersion();
    }
    getInstructions(): string | undefined {
        return this.client.getInstructions();
    }
    ping(options?: RequestOptions): Promise<{ _meta?: import("zod").objectOutputType<{}, import("zod").ZodTypeAny, "passthrough"> | undefined; }> {
        return this.client.ping(options);
    }
    complete(params: CompleteRequest["params"], options?: RequestOptions): Promise<import("zod").objectOutputType<import("zod").objectUtil.extendShape<{ _meta: import("zod").ZodOptional<import("zod").ZodObject<{}, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{}, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{}, import("zod").ZodTypeAny, "passthrough">>>; }, { completion: import("zod").ZodObject<{ values: import("zod").ZodArray<import("zod").ZodString, "many">; total: import("zod").ZodOptional<import("zod").ZodNumber>; hasMore: import("zod").ZodOptional<import("zod").ZodBoolean>; }, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{ values: import("zod").ZodArray<import("zod").ZodString, "many">; total: import("zod").ZodOptional<import("zod").ZodNumber>; hasMore: import("zod").ZodOptional<import("zod").ZodBoolean>; }, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{ values: import("zod").ZodArray<import("zod").ZodString, "many">; total: import("zod").ZodOptional<import("zod").ZodNumber>; hasMore: import("zod").ZodOptional<import("zod").ZodBoolean>; }, import("zod").ZodTypeAny, "passthrough">>; }>, import("zod").ZodTypeAny, "passthrough">> {
        return this.client.complete(params, options);
    }
    setLoggingLevel(level: LoggingLevel, options?: RequestOptions): Promise<{ _meta?: import("zod").objectOutputType<{}, import("zod").ZodTypeAny, "passthrough"> | undefined; }> {
        return this.client.setLoggingLevel(level, options);
    }
    getPrompt(params: GetPromptRequest["params"], options?: RequestOptions): Promise<import("zod").objectOutputType<import("zod").objectUtil.extendShape<{ _meta: import("zod").ZodOptional<import("zod").ZodObject<{}, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{}, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{}, import("zod").ZodTypeAny, "passthrough">>>; }, { description: import("zod").ZodOptional<import("zod").ZodString>; messages: import("zod").ZodArray<import("zod").ZodObject<{ role: import("zod").ZodEnum<["user", "assistant"]>; content: import("zod").ZodUnion<[import("zod").ZodObject<{ type: import("zod").ZodLiteral<"text">; text: import("zod").ZodString; }, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{ type: import("zod").ZodLiteral<"text">; text: import("zod").ZodString; }, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{ type: import("zod").ZodLiteral<"text">; text: import("zod").ZodString; }, import("zod").ZodTypeAny, "passthrough">>, import("zod").ZodObject<{ type: import("zod").ZodLiteral<"image">; data: import("zod").ZodString; mimeType: import("zod").ZodString; }, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{ type: import("zod").ZodLiteral<"image">; data: import("zod").ZodString; mimeType: import("zod").ZodString; }, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{ type: import("zod").ZodLiteral<"image">; data: import("zod").ZodString; mimeType: import("zod").ZodString; }, import("zod").ZodTypeAny, "passthrough">>, import("zod").ZodObject<{ type: import("zod").ZodLiteral<"resource">; resource: import("zod").ZodUnion<[import("zod").ZodObject<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { text: import("zod").ZodString; }>, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { text: import("zod").ZodString; }>, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { text: import("zod").ZodString; }>, import("zod").ZodTypeAny, "passthrough">>, import("zod").ZodObject<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { blob: import("zod").ZodString; }>, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { blob: import("zod").ZodString; }>, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { blob: import("zod").ZodString; }>, import("zod").ZodTypeAny, "passthrough">>]>; }, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{ type: import("zod").ZodLiteral<"resource">; resource: import("zod").ZodUnion<[import("zod").ZodObject<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { text: import("zod").ZodString; }>, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { text: import("zod").ZodString; }>, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { text: import("zod").ZodString; }>, import("zod").ZodTypeAny, "passthrough">>, import("zod").ZodObject<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { blob: import("zod").ZodString; }>, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { blob: import("zod").ZodString; }>, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { blob: import("zod").ZodString; }>, import("zod").ZodTypeAny, "passthrough">>]>; }, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{ type: import("zod").ZodLiteral<"resource">; resource: import("zod").ZodUnion<[import("zod").ZodObject<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { text: import("zod").ZodString; }>, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { text: import("zod").ZodString; }>, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { text: import("zod").ZodString; }>, import("zod").ZodTypeAny, "passthrough">>, import("zod").ZodObject<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { blob: import("zod").ZodString; }>, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { blob: import("zod").ZodString; }>, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { blob: import("zod").ZodString; }>, import("zod").ZodTypeAny, "passthrough">>]>; }, import("zod").ZodTypeAny, "passthrough">>]>; }, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{ role: import("zod").ZodEnum<["user", "assistant"]>; content: import("zod").ZodUnion<[import("zod").ZodObject<{ type: import("zod").ZodLiteral<"text">; text: import("zod").ZodString; }, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{ type: import("zod").ZodLiteral<"text">; text: import("zod").ZodString; }, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{ type: import("zod").ZodLiteral<"text">; text: import("zod").ZodString; }, import("zod").ZodTypeAny, "passthrough">>, import("zod").ZodObject<{ type: import("zod").ZodLiteral<"image">; data: import("zod").ZodString; mimeType: import("zod").ZodString; }, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{ type: import("zod").ZodLiteral<"image">; data: import("zod").ZodString; mimeType: import("zod").ZodString; }, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{ type: import("zod").ZodLiteral<"image">; data: import("zod").ZodString; mimeType: import("zod").ZodString; }, import("zod").ZodTypeAny, "passthrough">>, import("zod").ZodObject<{ type: import("zod").ZodLiteral<"resource">; resource: import("zod").ZodUnion<[import("zod").ZodObject<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { text: import("zod").ZodString; }>, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { text: import("zod").ZodString; }>, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { text: import("zod").ZodString; }>, import("zod").ZodTypeAny, "passthrough">>, import("zod").ZodObject<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { blob: import("zod").ZodString; }>, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { blob: import("zod").ZodString; }>, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { blob: import("zod").ZodString; }>, import("zod").ZodTypeAny, "passthrough">>]>; }, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{ type: import("zod").ZodLiteral<"resource">; resource: import("zod").ZodUnion<[import("zod").ZodObject<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { text: import("zod").ZodString; }>, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { text: import("zod").ZodString; }>, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { text: import("zod").ZodString; }>, import("zod").ZodTypeAny, "passthrough">>, import("zod").ZodObject<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { blob: import("zod").ZodString; }>, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { blob: import("zod").ZodString; }>, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { blob: import("zod").ZodString; }>, import("zod").ZodTypeAny, "passthrough">>]>; }, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{ type: import("zod").ZodLiteral<"resource">; resource: import("zod").ZodUnion<[import("zod").ZodObject<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { text: import("zod").ZodString; }>, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { text: import("zod").ZodString; }>, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { text: import("zod").ZodString; }>, import("zod").ZodTypeAny, "passthrough">>, import("zod").ZodObject<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { blob: import("zod").ZodString; }>, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { blob: import("zod").ZodString; }>, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { blob: import("zod").ZodString; }>, import("zod").ZodTypeAny, "passthrough">>]>; }, import("zod").ZodTypeAny, "passthrough">>]>; }, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{ role: import("zod").ZodEnum<["user", "assistant"]>; content: import("zod").ZodUnion<[import("zod").ZodObject<{ type: import("zod").ZodLiteral<"text">; text: import("zod").ZodString; }, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{ type: import("zod").ZodLiteral<"text">; text: import("zod").ZodString; }, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{ type: import("zod").ZodLiteral<"text">; text: import("zod").ZodString; }, import("zod").ZodTypeAny, "passthrough">>, import("zod").ZodObject<{ type: import("zod").ZodLiteral<"image">; data: import("zod").ZodString; mimeType: import("zod").ZodString; }, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{ type: import("zod").ZodLiteral<"image">; data: import("zod").ZodString; mimeType: import("zod").ZodString; }, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{ type: import("zod").ZodLiteral<"image">; data: import("zod").ZodString; mimeType: import("zod").ZodString; }, import("zod").ZodTypeAny, "passthrough">>, import("zod").ZodObject<{ type: import("zod").ZodLiteral<"resource">; resource: import("zod").ZodUnion<[import("zod").ZodObject<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { text: import("zod").ZodString; }>, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { text: import("zod").ZodString; }>, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { text: import("zod").ZodString; }>, import("zod").ZodTypeAny, "passthrough">>, import("zod").ZodObject<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { blob: import("zod").ZodString; }>, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { blob: import("zod").ZodString; }>, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { blob: import("zod").ZodString; }>, import("zod").ZodTypeAny, "passthrough">>]>; }, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{ type: import("zod").ZodLiteral<"resource">; resource: import("zod").ZodUnion<[import("zod").ZodObject<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { text: import("zod").ZodString; }>, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { text: import("zod").ZodString; }>, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { text: import("zod").ZodString; }>, import("zod").ZodTypeAny, "passthrough">>, import("zod").ZodObject<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { blob: import("zod").ZodString; }>, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { blob: import("zod").ZodString; }>, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { blob: import("zod").ZodString; }>, import("zod").ZodTypeAny, "passthrough">>]>; }, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{ type: import("zod").ZodLiteral<"resource">; resource: import("zod").ZodUnion<[import("zod").ZodObject<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { text: import("zod").ZodString; }>, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { text: import("zod").ZodString; }>, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { text: import("zod").ZodString; }>, import("zod").ZodTypeAny, "passthrough">>, import("zod").ZodObject<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { blob: import("zod").ZodString; }>, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { blob: import("zod").ZodString; }>, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { blob: import("zod").ZodString; }>, import("zod").ZodTypeAny, "passthrough">>]>; }, import("zod").ZodTypeAny, "passthrough">>]>; }, import("zod").ZodTypeAny, "passthrough">>, "many">; }>, import("zod").ZodTypeAny, "passthrough">> {
        return this.client.getPrompt(params, options);
    }
    listPrompts(params?: ListPromptsRequest["params"], options?: RequestOptions): Promise<import("zod").objectOutputType<import("zod").objectUtil.extendShape<import("zod").objectUtil.extendShape<{ _meta: import("zod").ZodOptional<import("zod").ZodObject<{}, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{}, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{}, import("zod").ZodTypeAny, "passthrough">>>; }, { nextCursor: import("zod").ZodOptional<import("zod").ZodString>; }>, { prompts: import("zod").ZodArray<import("zod").ZodObject<{ name: import("zod").ZodString; description: import("zod").ZodOptional<import("zod").ZodString>; arguments: import("zod").ZodOptional<import("zod").ZodArray<import("zod").ZodObject<{ name: import("zod").ZodString; description: import("zod").ZodOptional<import("zod").ZodString>; required: import("zod").ZodOptional<import("zod").ZodBoolean>; }, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{ name: import("zod").ZodString; description: import("zod").ZodOptional<import("zod").ZodString>; required: import("zod").ZodOptional<import("zod").ZodBoolean>; }, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{ name: import("zod").ZodString; description: import("zod").ZodOptional<import("zod").ZodString>; required: import("zod").ZodOptional<import("zod").ZodBoolean>; }, import("zod").ZodTypeAny, "passthrough">>, "many">>; }, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{ name: import("zod").ZodString; description: import("zod").ZodOptional<import("zod").ZodString>; arguments: import("zod").ZodOptional<import("zod").ZodArray<import("zod").ZodObject<{ name: import("zod").ZodString; description: import("zod").ZodOptional<import("zod").ZodString>; required: import("zod").ZodOptional<import("zod").ZodBoolean>; }, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{ name: import("zod").ZodString; description: import("zod").ZodOptional<import("zod").ZodString>; required: import("zod").ZodOptional<import("zod").ZodBoolean>; }, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{ name: import("zod").ZodString; description: import("zod").ZodOptional<import("zod").ZodString>; required: import("zod").ZodOptional<import("zod").ZodBoolean>; }, import("zod").ZodTypeAny, "passthrough">>, "many">>; }, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{ name: import("zod").ZodString; description: import("zod").ZodOptional<import("zod").ZodString>; arguments: import("zod").ZodOptional<import("zod").ZodArray<import("zod").ZodObject<{ name: import("zod").ZodString; description: import("zod").ZodOptional<import("zod").ZodString>; required: import("zod").ZodOptional<import("zod").ZodBoolean>; }, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{ name: import("zod").ZodString; description: import("zod").ZodOptional<import("zod").ZodString>; required: import("zod").ZodOptional<import("zod").ZodBoolean>; }, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{ name: import("zod").ZodString; description: import("zod").ZodOptional<import("zod").ZodString>; required: import("zod").ZodOptional<import("zod").ZodBoolean>; }, import("zod").ZodTypeAny, "passthrough">>, "many">>; }, import("zod").ZodTypeAny, "passthrough">>, "many">; }>, import("zod").ZodTypeAny, "passthrough">> {
        return this.client.listPrompts(params, options);
    }
    listResources(params?: ListResourcesRequest["params"], options?: RequestOptions): Promise<import("zod").objectOutputType<import("zod").objectUtil.extendShape<import("zod").objectUtil.extendShape<{ _meta: import("zod").ZodOptional<import("zod").ZodObject<{}, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{}, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{}, import("zod").ZodTypeAny, "passthrough">>>; }, { nextCursor: import("zod").ZodOptional<import("zod").ZodString>; }>, { resources: import("zod").ZodArray<import("zod").ZodObject<{ uri: import("zod").ZodString; name: import("zod").ZodString; description: import("zod").ZodOptional<import("zod").ZodString>; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{ uri: import("zod").ZodString; name: import("zod").ZodString; description: import("zod").ZodOptional<import("zod").ZodString>; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{ uri: import("zod").ZodString; name: import("zod").ZodString; description: import("zod").ZodOptional<import("zod").ZodString>; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, import("zod").ZodTypeAny, "passthrough">>, "many">; }>, import("zod").ZodTypeAny, "passthrough">> {
        return this.client.listResources(params, options);
    }
    listResourceTemplates(params?: ListResourceTemplatesRequest["params"], options?: RequestOptions): Promise<import("zod").objectOutputType<import("zod").objectUtil.extendShape<import("zod").objectUtil.extendShape<{ _meta: import("zod").ZodOptional<import("zod").ZodObject<{}, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{}, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{}, import("zod").ZodTypeAny, "passthrough">>>; }, { nextCursor: import("zod").ZodOptional<import("zod").ZodString>; }>, { resourceTemplates: import("zod").ZodArray<import("zod").ZodObject<{ uriTemplate: import("zod").ZodString; name: import("zod").ZodString; description: import("zod").ZodOptional<import("zod").ZodString>; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{ uriTemplate: import("zod").ZodString; name: import("zod").ZodString; description: import("zod").ZodOptional<import("zod").ZodString>; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{ uriTemplate: import("zod").ZodString; name: import("zod").ZodString; description: import("zod").ZodOptional<import("zod").ZodString>; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, import("zod").ZodTypeAny, "passthrough">>, "many">; }>, import("zod").ZodTypeAny, "passthrough">> {
        return this.client.listResourceTemplates(params, options);
    }
    readResource(params: ReadResourceRequest["params"], options?: RequestOptions): Promise<import("zod").objectOutputType<import("zod").objectUtil.extendShape<{ _meta: import("zod").ZodOptional<import("zod").ZodObject<{}, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{}, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{}, import("zod").ZodTypeAny, "passthrough">>>; }, { contents: import("zod").ZodArray<import("zod").ZodUnion<[import("zod").ZodObject<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { text: import("zod").ZodString; }>, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { text: import("zod").ZodString; }>, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { text: import("zod").ZodString; }>, import("zod").ZodTypeAny, "passthrough">>, import("zod").ZodObject<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { blob: import("zod").ZodString; }>, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { blob: import("zod").ZodString; }>, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { blob: import("zod").ZodString; }>, import("zod").ZodTypeAny, "passthrough">>]>, "many">; }>, import("zod").ZodTypeAny, "passthrough">> {
        return this.client.readResource(params, options);
    }
    subscribeResource(params: SubscribeRequest["params"], options?: RequestOptions): Promise<{ _meta?: import("zod").objectOutputType<{}, import("zod").ZodTypeAny, "passthrough"> | undefined; }> {
        return this.client.subscribeResource(params, options);
    }
    unsubscribeResource(params: UnsubscribeRequest["params"], options?: RequestOptions): Promise<{ _meta?: import("zod").objectOutputType<{}, import("zod").ZodTypeAny, "passthrough"> | undefined; }> {
        return this.client.unsubscribeResource(params, options);
    }
    callTool(params: CallToolRequest["params"], resultSchema?: typeof CallToolResultSchema | typeof CompatibilityCallToolResultSchema, options?: RequestOptions): Promise<import("zod").objectOutputType<import("zod").objectUtil.extendShape<{ _meta: import("zod").ZodOptional<import("zod").ZodObject<{}, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{}, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{}, import("zod").ZodTypeAny, "passthrough">>>; }, { content: import("zod").ZodArray<import("zod").ZodUnion<[import("zod").ZodObject<{ type: import("zod").ZodLiteral<"text">; text: import("zod").ZodString; }, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{ type: import("zod").ZodLiteral<"text">; text: import("zod").ZodString; }, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{ type: import("zod").ZodLiteral<"text">; text: import("zod").ZodString; }, import("zod").ZodTypeAny, "passthrough">>, import("zod").ZodObject<{ type: import("zod").ZodLiteral<"image">; data: import("zod").ZodString; mimeType: import("zod").ZodString; }, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{ type: import("zod").ZodLiteral<"image">; data: import("zod").ZodString; mimeType: import("zod").ZodString; }, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{ type: import("zod").ZodLiteral<"image">; data: import("zod").ZodString; mimeType: import("zod").ZodString; }, import("zod").ZodTypeAny, "passthrough">>, import("zod").ZodObject<{ type: import("zod").ZodLiteral<"resource">; resource: import("zod").ZodUnion<[import("zod").ZodObject<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { text: import("zod").ZodString; }>, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { text: import("zod").ZodString; }>, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { text: import("zod").ZodString; }>, import("zod").ZodTypeAny, "passthrough">>, import("zod").ZodObject<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { blob: import("zod").ZodString; }>, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { blob: import("zod").ZodString; }>, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { blob: import("zod").ZodString; }>, import("zod").ZodTypeAny, "passthrough">>]>; }, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{ type: import("zod").ZodLiteral<"resource">; resource: import("zod").ZodUnion<[import("zod").ZodObject<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { text: import("zod").ZodString; }>, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { text: import("zod").ZodString; }>, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { text: import("zod").ZodString; }>, import("zod").ZodTypeAny, "passthrough">>, import("zod").ZodObject<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { blob: import("zod").ZodString; }>, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { blob: import("zod").ZodString; }>, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { blob: import("zod").ZodString; }>, import("zod").ZodTypeAny, "passthrough">>]>; }, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{ type: import("zod").ZodLiteral<"resource">; resource: import("zod").ZodUnion<[import("zod").ZodObject<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { text: import("zod").ZodString; }>, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { text: import("zod").ZodString; }>, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { text: import("zod").ZodString; }>, import("zod").ZodTypeAny, "passthrough">>, import("zod").ZodObject<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { blob: import("zod").ZodString; }>, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { blob: import("zod").ZodString; }>, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<import("zod").objectUtil.extendShape<{ uri: import("zod").ZodString; mimeType: import("zod").ZodOptional<import("zod").ZodString>; }, { blob: import("zod").ZodString; }>, import("zod").ZodTypeAny, "passthrough">>]>; }, import("zod").ZodTypeAny, "passthrough">>]>, "many">; isError: import("zod").ZodOptional<import("zod").ZodDefault<import("zod").ZodBoolean>>; }>, import("zod").ZodTypeAny, "passthrough"> | import("zod").objectOutputType<import("zod").objectUtil.extendShape<{ _meta: import("zod").ZodOptional<import("zod").ZodObject<{}, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{}, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{}, import("zod").ZodTypeAny, "passthrough">>>; }, { toolResult: import("zod").ZodUnknown; }>, import("zod").ZodTypeAny, "passthrough">> {
        return this.client.callTool(params, resultSchema, options);
    }
    listTools(params?: ListToolsRequest["params"], options?: RequestOptions): Promise<import("zod").objectOutputType<import("zod").objectUtil.extendShape<import("zod").objectUtil.extendShape<{ _meta: import("zod").ZodOptional<import("zod").ZodObject<{}, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{}, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{}, import("zod").ZodTypeAny, "passthrough">>>; }, { nextCursor: import("zod").ZodOptional<import("zod").ZodString>; }>, { tools: import("zod").ZodArray<import("zod").ZodObject<{ name: import("zod").ZodString; description: import("zod").ZodOptional<import("zod").ZodString>; inputSchema: import("zod").ZodObject<{ type: import("zod").ZodLiteral<"object">; properties: import("zod").ZodOptional<import("zod").ZodObject<{}, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{}, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{}, import("zod").ZodTypeAny, "passthrough">>>; }, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{ type: import("zod").ZodLiteral<"object">; properties: import("zod").ZodOptional<import("zod").ZodObject<{}, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{}, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{}, import("zod").ZodTypeAny, "passthrough">>>; }, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{ type: import("zod").ZodLiteral<"object">; properties: import("zod").ZodOptional<import("zod").ZodObject<{}, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{}, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{}, import("zod").ZodTypeAny, "passthrough">>>; }, import("zod").ZodTypeAny, "passthrough">>; }, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{ name: import("zod").ZodString; description: import("zod").ZodOptional<import("zod").ZodString>; inputSchema: import("zod").ZodObject<{ type: import("zod").ZodLiteral<"object">; properties: import("zod").ZodOptional<import("zod").ZodObject<{}, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{}, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{}, import("zod").ZodTypeAny, "passthrough">>>; }, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{ type: import("zod").ZodLiteral<"object">; properties: import("zod").ZodOptional<import("zod").ZodObject<{}, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{}, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{}, import("zod").ZodTypeAny, "passthrough">>>; }, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{ type: import("zod").ZodLiteral<"object">; properties: import("zod").ZodOptional<import("zod").ZodObject<{}, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{}, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{}, import("zod").ZodTypeAny, "passthrough">>>; }, import("zod").ZodTypeAny, "passthrough">>; }, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{ name: import("zod").ZodString; description: import("zod").ZodOptional<import("zod").ZodString>; inputSchema: import("zod").ZodObject<{ type: import("zod").ZodLiteral<"object">; properties: import("zod").ZodOptional<import("zod").ZodObject<{}, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{}, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{}, import("zod").ZodTypeAny, "passthrough">>>; }, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{ type: import("zod").ZodLiteral<"object">; properties: import("zod").ZodOptional<import("zod").ZodObject<{}, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{}, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{}, import("zod").ZodTypeAny, "passthrough">>>; }, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{ type: import("zod").ZodLiteral<"object">; properties: import("zod").ZodOptional<import("zod").ZodObject<{}, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{}, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{}, import("zod").ZodTypeAny, "passthrough">>>; }, import("zod").ZodTypeAny, "passthrough">>; }, import("zod").ZodTypeAny, "passthrough">>, "many">; }>, import("zod").ZodTypeAny, "passthrough">> {
        return this.client.listTools(params, options);
    }
    sendRootsListChanged(): Promise<void> {
        return this.client.sendRootsListChanged();
    }
    getServer(): McpServer {
        return this.server;
    }
    getClient(): Client {
        return this.client;
    }

    connect(): void {
        this.server.connect(this.serverTransport);
        this.client.connect(this.clientTransport);
    }
}