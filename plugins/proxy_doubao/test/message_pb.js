// source: message.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

goog.exportSymbol('proto.msg_pb.MetaInfo', null, global);
goog.exportSymbol('proto.msg_pb.PushMessage', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg_pb.MetaInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.msg_pb.MetaInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg_pb.MetaInfo.displayName = 'proto.msg_pb.MetaInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.msg_pb.PushMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.msg_pb.PushMessage.repeatedFields_, null);
};
goog.inherits(proto.msg_pb.PushMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.msg_pb.PushMessage.displayName = 'proto.msg_pb.PushMessage';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg_pb.MetaInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.msg_pb.MetaInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg_pb.MetaInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg_pb.MetaInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    info: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg_pb.MetaInfo}
 */
proto.msg_pb.MetaInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg_pb.MetaInfo;
  return proto.msg_pb.MetaInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg_pb.MetaInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg_pb.MetaInfo}
 */
proto.msg_pb.MetaInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg_pb.MetaInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg_pb.MetaInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg_pb.MetaInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg_pb.MetaInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getInfo();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 type = 1;
 * @return {number}
 */
proto.msg_pb.MetaInfo.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg_pb.MetaInfo} returns this
 */
proto.msg_pb.MetaInfo.prototype.setType = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string info = 2;
 * @return {string}
 */
proto.msg_pb.MetaInfo.prototype.getInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg_pb.MetaInfo} returns this
 */
proto.msg_pb.MetaInfo.prototype.setInfo = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.msg_pb.PushMessage.repeatedFields_ = [18];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.msg_pb.PushMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.msg_pb.PushMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.msg_pb.PushMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg_pb.PushMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    conversationid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    sectionid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    messageid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    localmessageid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    index: jspb.Message.getFieldWithDefault(msg, 5, 0),
    secsender: jspb.Message.getFieldWithDefault(msg, 6, ""),
    replyid: jspb.Message.getFieldWithDefault(msg, 7, ""),
    status: jspb.Message.getFieldWithDefault(msg, 8, 0),
    createtime: jspb.Message.getFieldWithDefault(msg, 9, 0),
    messagetype: jspb.Message.getFieldWithDefault(msg, 10, ""),
    contenttype: jspb.Message.getFieldWithDefault(msg, 11, ""),
    content: jspb.Message.getFieldWithDefault(msg, 12, ""),
    ttscontent: jspb.Message.getFieldWithDefault(msg, 13, ""),
    extMap: (f = msg.getExtMap()) ? f.toObject(includeInstance, undefined) : [],
    nextconnectiontype: jspb.Message.getFieldWithDefault(msg, 15, ""),
    chunkseq: jspb.Message.getFieldWithDefault(msg, 16, 0),
    isdelta: jspb.Message.getBooleanFieldWithDefault(msg, 17, false),
    metainfosList: jspb.Message.toObjectList(msg.getMetainfosList(),
    proto.msg_pb.MetaInfo.toObject, includeInstance),
    localconversationid: jspb.Message.getFieldWithDefault(msg, 19, ""),
    botid: jspb.Message.getFieldWithDefault(msg, 20, ""),
    appletpayloadMap: (f = msg.getAppletpayloadMap()) ? f.toObject(includeInstance, undefined) : [],
    modeltype: jspb.Message.getFieldWithDefault(msg, 22, ""),
    updatetime: jspb.Message.getFieldWithDefault(msg, 23, 0),
    threadid: jspb.Message.getFieldWithDefault(msg, 24, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.msg_pb.PushMessage}
 */
proto.msg_pb.PushMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.msg_pb.PushMessage;
  return proto.msg_pb.PushMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.msg_pb.PushMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.msg_pb.PushMessage}
 */
proto.msg_pb.PushMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setConversationid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSectionid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocalmessageid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIndex(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecsender(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setReplyid(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatetime(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessagetype(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setContenttype(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setTtscontent(value);
      break;
    case 14:
      var value = msg.getExtMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextconnectiontype(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setChunkseq(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsdelta(value);
      break;
    case 18:
      var value = new proto.msg_pb.MetaInfo;
      reader.readMessage(value,proto.msg_pb.MetaInfo.deserializeBinaryFromReader);
      msg.addMetainfos(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocalconversationid(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setBotid(value);
      break;
    case 21:
      var value = msg.getAppletpayloadMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setModeltype(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatetime(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setThreadid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.msg_pb.PushMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.msg_pb.PushMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.msg_pb.PushMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.msg_pb.PushMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConversationid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSectionid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMessageid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLocalmessageid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getIndex();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getSecsender();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getReplyid();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getCreatetime();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getMessagetype();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getContenttype();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getTtscontent();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getExtMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(14, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getNextconnectiontype();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getChunkseq();
  if (f !== 0) {
    writer.writeInt32(
      16,
      f
    );
  }
  f = message.getIsdelta();
  if (f) {
    writer.writeBool(
      17,
      f
    );
  }
  f = message.getMetainfosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      18,
      f,
      proto.msg_pb.MetaInfo.serializeBinaryToWriter
    );
  }
  f = message.getLocalconversationid();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getBotid();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getAppletpayloadMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(21, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getModeltype();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
  f = message.getUpdatetime();
  if (f !== 0) {
    writer.writeInt64(
      23,
      f
    );
  }
  f = message.getThreadid();
  if (f.length > 0) {
    writer.writeString(
      24,
      f
    );
  }
};


/**
 * optional string conversationId = 1;
 * @return {string}
 */
proto.msg_pb.PushMessage.prototype.getConversationid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg_pb.PushMessage} returns this
 */
proto.msg_pb.PushMessage.prototype.setConversationid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string sectionId = 2;
 * @return {string}
 */
proto.msg_pb.PushMessage.prototype.getSectionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg_pb.PushMessage} returns this
 */
proto.msg_pb.PushMessage.prototype.setSectionid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string messageId = 3;
 * @return {string}
 */
proto.msg_pb.PushMessage.prototype.getMessageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg_pb.PushMessage} returns this
 */
proto.msg_pb.PushMessage.prototype.setMessageid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string localMessageId = 4;
 * @return {string}
 */
proto.msg_pb.PushMessage.prototype.getLocalmessageid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg_pb.PushMessage} returns this
 */
proto.msg_pb.PushMessage.prototype.setLocalmessageid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 index = 5;
 * @return {number}
 */
proto.msg_pb.PushMessage.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg_pb.PushMessage} returns this
 */
proto.msg_pb.PushMessage.prototype.setIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string secSender = 6;
 * @return {string}
 */
proto.msg_pb.PushMessage.prototype.getSecsender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg_pb.PushMessage} returns this
 */
proto.msg_pb.PushMessage.prototype.setSecsender = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string replyId = 7;
 * @return {string}
 */
proto.msg_pb.PushMessage.prototype.getReplyid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg_pb.PushMessage} returns this
 */
proto.msg_pb.PushMessage.prototype.setReplyid = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int32 status = 8;
 * @return {number}
 */
proto.msg_pb.PushMessage.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg_pb.PushMessage} returns this
 */
proto.msg_pb.PushMessage.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int64 createTime = 9;
 * @return {number}
 */
proto.msg_pb.PushMessage.prototype.getCreatetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg_pb.PushMessage} returns this
 */
proto.msg_pb.PushMessage.prototype.setCreatetime = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional string messageType = 10;
 * @return {string}
 */
proto.msg_pb.PushMessage.prototype.getMessagetype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg_pb.PushMessage} returns this
 */
proto.msg_pb.PushMessage.prototype.setMessagetype = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string contentType = 11;
 * @return {string}
 */
proto.msg_pb.PushMessage.prototype.getContenttype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg_pb.PushMessage} returns this
 */
proto.msg_pb.PushMessage.prototype.setContenttype = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string content = 12;
 * @return {string}
 */
proto.msg_pb.PushMessage.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg_pb.PushMessage} returns this
 */
proto.msg_pb.PushMessage.prototype.setContent = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string ttsContent = 13;
 * @return {string}
 */
proto.msg_pb.PushMessage.prototype.getTtscontent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg_pb.PushMessage} returns this
 */
proto.msg_pb.PushMessage.prototype.setTtscontent = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * map<string, string> ext = 14;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.msg_pb.PushMessage.prototype.getExtMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 14, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.msg_pb.PushMessage} returns this
 */
proto.msg_pb.PushMessage.prototype.clearExtMap = function() {
  this.getExtMap().clear();
  return this;};


/**
 * optional string nextConnectionType = 15;
 * @return {string}
 */
proto.msg_pb.PushMessage.prototype.getNextconnectiontype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg_pb.PushMessage} returns this
 */
proto.msg_pb.PushMessage.prototype.setNextconnectiontype = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional int32 chunkSeq = 16;
 * @return {number}
 */
proto.msg_pb.PushMessage.prototype.getChunkseq = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg_pb.PushMessage} returns this
 */
proto.msg_pb.PushMessage.prototype.setChunkseq = function(value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * optional bool isDelta = 17;
 * @return {boolean}
 */
proto.msg_pb.PushMessage.prototype.getIsdelta = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 17, false));
};


/**
 * @param {boolean} value
 * @return {!proto.msg_pb.PushMessage} returns this
 */
proto.msg_pb.PushMessage.prototype.setIsdelta = function(value) {
  return jspb.Message.setProto3BooleanField(this, 17, value);
};


/**
 * repeated MetaInfo metaInfos = 18;
 * @return {!Array<!proto.msg_pb.MetaInfo>}
 */
proto.msg_pb.PushMessage.prototype.getMetainfosList = function() {
  return /** @type{!Array<!proto.msg_pb.MetaInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.msg_pb.MetaInfo, 18));
};


/**
 * @param {!Array<!proto.msg_pb.MetaInfo>} value
 * @return {!proto.msg_pb.PushMessage} returns this
*/
proto.msg_pb.PushMessage.prototype.setMetainfosList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 18, value);
};


/**
 * @param {!proto.msg_pb.MetaInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.msg_pb.MetaInfo}
 */
proto.msg_pb.PushMessage.prototype.addMetainfos = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 18, opt_value, proto.msg_pb.MetaInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.msg_pb.PushMessage} returns this
 */
proto.msg_pb.PushMessage.prototype.clearMetainfosList = function() {
  return this.setMetainfosList([]);
};


/**
 * optional string localConversationId = 19;
 * @return {string}
 */
proto.msg_pb.PushMessage.prototype.getLocalconversationid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg_pb.PushMessage} returns this
 */
proto.msg_pb.PushMessage.prototype.setLocalconversationid = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional string botId = 20;
 * @return {string}
 */
proto.msg_pb.PushMessage.prototype.getBotid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg_pb.PushMessage} returns this
 */
proto.msg_pb.PushMessage.prototype.setBotid = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * map<string, string> appletPayload = 21;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.msg_pb.PushMessage.prototype.getAppletpayloadMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 21, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.msg_pb.PushMessage} returns this
 */
proto.msg_pb.PushMessage.prototype.clearAppletpayloadMap = function() {
  this.getAppletpayloadMap().clear();
  return this;};


/**
 * optional string modelType = 22;
 * @return {string}
 */
proto.msg_pb.PushMessage.prototype.getModeltype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg_pb.PushMessage} returns this
 */
proto.msg_pb.PushMessage.prototype.setModeltype = function(value) {
  return jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * optional int64 updateTime = 23;
 * @return {number}
 */
proto.msg_pb.PushMessage.prototype.getUpdatetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/**
 * @param {number} value
 * @return {!proto.msg_pb.PushMessage} returns this
 */
proto.msg_pb.PushMessage.prototype.setUpdatetime = function(value) {
  return jspb.Message.setProto3IntField(this, 23, value);
};


/**
 * optional string threadId = 24;
 * @return {string}
 */
proto.msg_pb.PushMessage.prototype.getThreadid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/**
 * @param {string} value
 * @return {!proto.msg_pb.PushMessage} returns this
 */
proto.msg_pb.PushMessage.prototype.setThreadid = function(value) {
  return jspb.Message.setProto3StringField(this, 24, value);
};


goog.object.extend(exports, proto.msg_pb);
